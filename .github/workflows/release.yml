name: Build, Package, and Release

on:
  push:
    tags:
      - "v*" # triggers on version tags like v0.1.1

permissions:
  contents: write

jobs:
  build:
    name: Build and Package (${{ matrix.target }})
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            platform: linux
            arch: x86_64
            ext: ""
            archive: tar.gz
          - os: macos-latest
            target: x86_64-apple-darwin
            platform: macos
            arch: x86_64
            ext: ""
            archive: tar.gz
          - os: macos-latest
            target: aarch64-apple-darwin
            platform: macos
            arch: arm64
            ext: ""
            archive: tar.gz
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            platform: windows
            arch: x86_64
            ext: .exe
            archive: zip

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Get version from Cargo.toml
        id: version
        run: |
          VERSION=$(grep '^version' Cargo.toml | head -1 | cut -d '"' -f2)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Detected version: $VERSION"

      - name: Build release binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Package binary
        run: |
          mkdir -p release_binaries
          BIN_NAME="todo${{ matrix.ext }}"
          BIN_PATH="target/${{ matrix.target }}/release/${BIN_NAME}"

          if [ "${{ matrix.archive }}" = "tar.gz" ]; then
            tar -czf "release_binaries/todo-${{ matrix.platform }}-${{ matrix.arch }}-v${{ env.VERSION }}.tar.gz" -C "target/${{ matrix.target }}/release" "${BIN_NAME}"
          else
            cd target/${{ matrix.target }}/release
            powershell Compress-Archive -Path "${BIN_NAME}" -DestinationPath "../../../release_binaries/todo-${{ matrix.platform }}-${{ matrix.arch }}-v${{ env.VERSION }}.zip"
            cd ../../..
          fi

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: todo-${{ matrix.platform }}-${{ matrix.arch }}
          path: release_binaries/todo-${{ matrix.platform }}-${{ matrix.arch }}-v${{ env.VERSION }}.*

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          merge-multiple: true

      - name: Get version from Cargo.toml
        id: version
        run: |
          VERSION=$(grep '^version' Cargo.toml | head -1 | cut -d '"' -f2)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: List downloaded files
        run: |
          echo "Downloaded artifacts:"
          ls -R artifacts/

      - name: Generate release notes
        run: |
          cat > release_notes.md <<EOF
          # 🦀 TODO CLI v${{ env.VERSION }}

          Download the binary for your platform:

          | Platform | Architecture | Download |
          |----------|--------------|----------|
          | 🐧 Linux | x86_64 | [todo-linux-x86_64-v${{ env.VERSION }}.tar.gz](https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/todo-linux-x86_64-v${{ env.VERSION }}.tar.gz) |
          | 🍎 macOS (Intel) | x86_64 | [todo-macos-x86_64-v${{ env.VERSION }}.tar.gz](https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/todo-macos-x86_64-v${{ env.VERSION }}.tar.gz) |
          | 🍏 macOS (Apple Silicon) | arm64 | [todo-macos-arm64-v${{ env.VERSION }}.tar.gz](https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/todo-macos-arm64-v${{ env.VERSION }}.tar.gz) |
          | 🪟 Windows | x86_64 | [todo-windows-x86_64-v${{ env.VERSION }}.zip](https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/todo-windows-x86_64-v${{ env.VERSION }}.zip) |

          ## Installation

          ### Linux / macOS
          \`\`\`bash
          # Download and extract
          tar -xzf todo-<platform>-<arch>-v${{ env.VERSION }}.tar.gz

          # Make executable and move to PATH
          chmod +x todo
          sudo mv todo /usr/local/bin/
          \`\`\`

          ### Windows
          \`\`\`powershell
          # Extract the zip file
          # Move todo.exe to a directory in your PATH
          \`\`\`

          ## Usage
          \`\`\`bash
          todo add "Your task here"
          todo list
          todo complete <id>
          todo remove <id>
          \`\`\`
          EOF

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body_path: release_notes.md
          files: |
            artifacts/*.tar.gz
            artifacts/*.zip
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
